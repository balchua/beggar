name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: beggar_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Check format
      run: cargo fmt --all -- --check --config-path=rustfmt.toml

    - name: Clippy
      run: cargo clippy -- -D warnings

    - name: Build
      run: cargo build --verbose

    - name: Run migrations and create SQLx offline data
      run: |
        cargo install sqlx-cli --no-default-features --features native-tls,postgres
        sqlx migrate run
        cargo sqlx prepare --check -- --lib
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/beggar_test

    - name: Run tests
      run: cargo test --verbose
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/beggar_test

  check-sqlx:
    name: Check SQLx Queries (Offline)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Check SQLx queries (offline mode)
        run: cargo sqlx prepare --check
        env:
          SQLX_OFFLINE: true

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: beggar_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: |
          cargo llvm-cov test --ignore-filename-regex="(error|main)\.rs" --lcov --output-path lcov.info
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/beggar_test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false
          verbose: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
